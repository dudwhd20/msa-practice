server:
  port: 8081

spring:
  profiles:
    active : local
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: product-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  datasource:
    url: jdbc:h2:mem:product-db
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  application:
    name: product-service

resilience4j:
  retry:
    instances:
      retry4j:
        max-attempts: 3
        wait-duration: 1s

  circuitbreaker:
    instances:
      cb4j:
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 10s

  bulkhead:
    instances:
      bulkhead4j:
        max-concurrent-calls: 2



logging :
  pattern :
    level : "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

management:
  endpoints:
    web:
      exposure:
        include : health
    enabled-by-default : false


---
spring:
  config:
    activate:
      on-profile : docker
  datasource:
    url: jdbc:postgresql://product-postgres:5432/productdb?schema=public
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres
